{"version":3,"sources":["colors.js","App.js"],"names":["theme","App","useState","working","setWorking","text","setText","toDos","setToDos","useEffect","loadToDos","saveToDos","toSave","a","async","AsyncStorage","setItem","JSON","stringify","getItem","s","parse","View","style","styles","container","StatusBar","header","TouchableOpacity","onPress","Text","fontSize","fontWeight","color","TextInput","onSubmitEditing","newToDos","Date","now","work","onChangeText","payload","returnKeyType","placeholder","input","value","ScrollView","Object","keys","map","key","toDo","toDoText","Platform","confirm","Alert","alert","deleteToDo","Fontisto","name","size","StyleSheet","create","flex","backgroundColor","paddingHorizontal","justifyContent","flexDirection","marginTop","paddingVertical","borderRadius","marginVertical","marginBottom","alignItems"],"mappings":"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","file":"static/js/app.5d479ade.chunk.js","sourcesContent":["export const theme = {\r\n\tbg: 'black',\r\n\tgrey: '#3A3D40',\r\n\ttoDoBg: '#5C5C60',\r\n};\r\n","import { Fontisto } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport {\n\tAlert,\n\tPlatform,\n\tScrollView,\n\tStyleSheet,\n\tText,\n\tTextInput,\n\tTouchableOpacity,\n\tView,\n} from 'react-native';\nimport { theme } from './colors';\nconst STORAGE_KEY = '@toDos';\n\nexport default function App() {\n\tconst [working, setWorking] = useState(true);\n\tconst [text, setText] = useState('');\n\tconst [toDos, setToDos] = useState({});\n\tuseEffect(() => {\n\t\tloadToDos();\n\t}, []);\n\tconst travel = () => setWorking(false);\n\tconst work = () => setWorking(true);\n\tconst onChangeText = (payload) => setText(payload);\n\tconst saveToDos = async (toSave) => {\n\t\tawait AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(toSave));\n\t};\n\tconst loadToDos = async () => {\n\t\tconst s = await AsyncStorage.getItem(STORAGE_KEY);\n\t\tif (s) setToDos(JSON.parse(s));\n\t};\n\tconst addToDo = async () => {\n\t\tif (text === '') {\n\t\t\treturn;\n\t\t}\n\t\t// const newToDos = Object.assign({}, toDos, {\n\t\t// \t[Date.now()]: { text, work: working },\n\t\t// });\n\t\tconst newToDos = { ...toDos, [Date.now()]: { text, work: working } };\n\t\tsetToDos(newToDos);\n\t\tawait saveToDos(newToDos);\n\t\tsetText('');\n\t};\n\tconst deleteToDo = async (key) => {\n\t\tif (Platform) {\n\t\t\tconst ok = confirm('Do you want to delete this To Do?');\n\t\t\tif (ok) {\n\t\t\t\tconst newToDos = { ...toDos };\n\t\t\t\tdelete newToDos[key];\n\t\t\t\tsetToDos(newToDos);\n\t\t\t\tawait saveToDos(newToDos);\n\t\t\t}\n\t\t} else {\n\t\t\tAlert.alert('Delete To Do?', 'Are you sure?', [\n\t\t\t\t{ text: 'Cancel' },\n\t\t\t\t{\n\t\t\t\t\ttext: \"I'm sure\",\n\t\t\t\t\tonPress: async () => {\n\t\t\t\t\t\tconst newToDos = { ...toDos };\n\t\t\t\t\t\tdelete newToDos[key];\n\t\t\t\t\t\tsetToDos(newToDos);\n\t\t\t\t\t\tawait saveToDos(newToDos);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<StatusBar style=\"auto\" />\n\t\t\t<View style={styles.header}>\n\t\t\t\t<TouchableOpacity onPress={work}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfontSize: 38,\n\t\t\t\t\t\t\tfontWeight: '600',\n\t\t\t\t\t\t\tcolor: working ? 'white' : theme.grey,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tWork\n\t\t\t\t\t</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t\t<TouchableOpacity onPress={travel}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfontSize: 38,\n\t\t\t\t\t\t\tfontWeight: '600',\n\t\t\t\t\t\t\tcolor: working ? theme.grey : 'white',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tTravel\n\t\t\t\t\t</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t\t<View>\n\t\t\t\t<TextInput\n\t\t\t\t\tonSubmitEditing={addToDo}\n\t\t\t\t\tonChangeText={onChangeText}\n\t\t\t\t\treturnKeyType=\"done\"\n\t\t\t\t\tplaceholder={working ? 'Add a To Do' : 'Where do you want to go?'}\n\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\tvalue={text}\n\t\t\t\t/>\n\t\t\t\t<ScrollView>\n\t\t\t\t\t{Object.keys(toDos).map((key) =>\n\t\t\t\t\t\ttoDos[key].work === working ? (\n\t\t\t\t\t\t\t<View style={styles.toDo} key={key}>\n\t\t\t\t\t\t\t\t<Text style={styles.toDoText}>{toDos[key].text}</Text>\n\t\t\t\t\t\t\t\t<TouchableOpacity onPress={() => deleteToDo(key)}>\n\t\t\t\t\t\t\t\t\t<Fontisto name=\"trash\" size={18} color={theme.toDoBg} />\n\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t) : null\n\t\t\t\t\t)}\n\t\t\t\t</ScrollView>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: theme.bg,\n\t\tpaddingHorizontal: 20,\n\t},\n\theader: {\n\t\tjustifyContent: 'space-between',\n\t\tflexDirection: 'row',\n\t\tmarginTop: 100,\n\t},\n\tinput: {\n\t\tbackgroundColor: 'white',\n\t\tpaddingVertical: 15,\n\t\tpaddingHorizontal: 20,\n\t\tborderRadius: 20,\n\t\tmarginVertical: 20,\n\t\tfontSize: 18,\n\t},\n\ttoDo: {\n\t\tbackgroundColor: theme.grey,\n\t\tmarginBottom: 10,\n\t\tpaddingVertical: 20,\n\t\tpaddingHorizontal: 20,\n\t\tborderRadius: 15,\n\t\tflexDirection: 'row',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-between',\n\t},\n\ttoDoText: {\n\t\tcolor: 'white',\n\t\tfontSize: 16,\n\t\tfontWeight: '500',\n\t},\n});\n"],"sourceRoot":""}